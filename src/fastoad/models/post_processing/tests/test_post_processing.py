"""
Test module for geometry functions of cg components
"""
#  This file is part of FAST-OAD_CS25
#  Copyright (C) 2022 ONERA & ISAE-SUPAERO
#  FAST is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.

# pylint: disable=redefined-outer-name  # needed for pytest fixtures

import os.path as pth
import plotly
import plotly.graph_objects as go
import pytest
import numpy as np
from fastoad._utils.testing import run_system
from fastoad.io import VariableIO
from scipy.optimize import fsolve

from ..speed_altitude_diagram import SpeedAltitudeDiagram
from ..ceiling_computation import CeilingComputation
from ..ceiling_mass_diagram import CeilingMassDiagram
from ..available_power_diagram import AvailablepowerDiagram
from ..thrust_diagram import ThrustDiagram


@pytest.fixture(scope="module")
def input_xml() -> VariableIO:
    """
    :return: access to the sample xml data
    """
    # TODO: have more consistency in input data (no need for the whole geometry_inputs_full.xml)
    return VariableIO(pth.join(pth.dirname(__file__), "data", "data_post_processing.xml"))


# def test_speed_altitude_diagram(input_xml):
#    # Doit contenir toutes les entrees dont le mod√®le a besoin
#    input_list = [
#        "data:geometry:wing:area",
#        "data:weight:aircraft:MTOW",
#        "data:weight:aircraft:MZFW",
#        "data:aerodynamics:aircraft:cruise:CL",
#        "data:propulsion:rubber_engine:bypass_ratio",
#        "data:propulsion:rubber_engine:overall_pressure_ratio",
#        "data:propulsion:rubber_engine:turbine_inlet_temperature",
#        "data:propulsion:rubber_engine:maximum_mach",
#        "data:propulsion:MTO_thrust",
#        "data:propulsion:rubber_engine:design_altitude",
#        "data:aerodynamics:aircraft:cruise:CD",
#        "data:aerodynamics:aircraft:landing:CL_max_clean",
#        "data:performance:ceiling:MTOW",
#        "data:performance:ceiling:MZFW",
#        "data:TLAR:cruise_mach",
#    ]
#
#    input_vars = input_xml.read(only=input_list).to_ivc()
#
#    expected_v_min_mtow = np.array(
#        [
#            77.18234811,
#            77.65210433,
#            78.12607528,
#            78.60431101,
#            79.0868623,
#            79.57378071,
#            80.06511853,
#            80.56092887,
#            81.0612656,
#            81.56618341,
#            82.07573783,
#            82.5899852,
#            83.10898275,
#            83.63278853,
#            84.16146152,
#            84.69506158,
#            85.23364949,
#            85.77728696,
#            86.32603665,
#            86.87996221,
#            87.43912825,
#            88.0036004,
#            88.57344531,
#            89.14873068,
#            89.72952526,
#            90.31589889,
#            90.90792252,
#            91.5056682,
#            92.10920917,
#            92.71861978,
#            93.33397562,
#            93.95535347,
#            94.58283133,
#            95.2164885,
#            95.85640552,
#            96.50266428,
#            97.15534796,
#            97.81454115,
#            98.48032979,
#            99.15280124,
#            99.83204431,
#            100.51814929,
#            101.21120795,
#            101.9113136,
#            102.61856111,
#            103.33304695,
#            104.05486918,
#            104.78412757,
#            105.52092354,
#            106.26536024,
#            107.01754259,
#            107.7775773,
#            108.54557292,
#            109.32163986,
#            110.10589044,
#            110.89843893,
#            111.69940159,
#            112.50889672,
#            113.32704467,
#            114.15396792,
#            114.98979112,
#            115.83464111,
#            116.688647,
#            117.55194017,
#            118.4246544,
#            119.30692583,
#            120.19889307,
#            121.10069724,
#            122.012482,
#            122.93439365,
#            123.86658115,
#            124.8091962,
#            125.76239329,
#            126.72632974,
#            127.70116583,
#            128.68706479,
#            129.6841929,
#            130.69271957,
#            131.71281739,
#            132.7446622,
#            133.78843319,
#            134.84431294,
#            135.91248752,
#            136.99314658,
#            138.08648339,
#            139.19269498,
#            140.31198217,
#            141.44454971,
#            142.82091812,
#            144.24944278,
#            145.69225585,
#            147.14950023,
#            148.62132028,
#            150.10786178,
#            151.60927197,
#            153.12569959,
#            154.65729483,
#            156.2042094,
#            157.76659654,
#            159.344611,
#        ]
#    )
#
#    expected_v_max_mtow = np.array(
#        [
#            274.12559654,
#            274.73558286,
#            275.35513669,
#            275.98425539,
#            276.62293641,
#            277.26767335,
#            277.92115216,
#            278.58411283,
#            279.25655244,
#            279.93846908,
#            280.62986211,
#            281.33073239,
#            282.04108254,
#            282.76091723,
#            283.42691717,
#            283.00632684,
#            282.58511051,
#            282.1632654,
#            281.74078866,
#            281.31767745,
#            280.89392892,
#            280.46954016,
#            280.04450827,
#            279.61883031,
#            279.19250333,
#            278.76552436,
#            278.33789039,
#            277.9095984,
#            277.48064533,
#            277.05102813,
#            276.6207437,
#            276.18978891,
#            275.75816063,
#            275.32585568,
#            274.89287088,
#            274.45920301,
#            274.02484882,
#            273.58980504,
#            273.15406839,
#            272.71763554,
#            272.28050313,
#            271.84266781,
#            271.40412616,
#            270.96487475,
#            270.52491013,
#            270.08422882,
#            269.6428273,
#            269.20070202,
#            268.75784941,
#            268.31426588,
#            267.86994779,
#            267.42489148,
#            266.97909326,
#            266.5325494,
#            266.08525616,
#            265.63720974,
#            265.18840633,
#            264.73884209,
#            264.28851311,
#            263.8374155,
#            263.3855453,
#            262.93289852,
#            262.47947116,
#            262.02525915,
#            261.57025842,
#            261.11446483,
#            260.65787423,
#            260.20048242,
#            259.74228517,
#            259.28327821,
#            258.82345723,
#            258.36281789,
#            257.9013558,
#            257.43906653,
#            256.97594563,
#            256.51198858,
#            256.04719084,
#            255.58154784,
#            255.11505492,
#            254.64770744,
#            254.17950066,
#            253.71042984,
#            253.24049018,
#            252.76967682,
#            252.29798488,
#            251.82540942,
#            251.35194545,
#            250.87758795,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#        ]
#    )
#
#    expected_v_min_mzfw = np.array(
#        [
#            70.070686,
#            70.53896959,
#            71.01186791,
#            71.48944116,
#            71.97175054,
#            72.45885821,
#            72.95082738,
#            73.44772228,
#            73.94960821,
#            74.45655154,
#            74.96861975,
#            75.48588142,
#            76.00840629,
#            76.53626527,
#            77.06953047,
#            77.60827517,
#            78.15257395,
#            78.7025026,
#            79.25813824,
#            79.81955928,
#            80.38684549,
#            80.960078,
#            81.53933933,
#            82.12471346,
#            82.7162858,
#            83.31414325,
#            83.91837424,
#            84.52906875,
#            85.14631832,
#            85.77021614,
#            86.40085704,
#            87.03833751,
#            87.68275581,
#            88.33421191,
#            88.99280761,
#            89.65864653,
#            90.33183418,
#            91.01247796,
#            91.70068725,
#            92.39657342,
#            93.10024988,
#            93.81183215,
#            94.53143786,
#            95.25918684,
#            95.99520114,
#            96.73960509,
#            97.49252536,
#            98.254091,
#            99.0244335,
#            99.80368684,
#            100.59198756,
#            101.38947479,
#            102.19629035,
#            103.01257878,
#            103.83848741,
#            104.67416642,
#            105.51976892,
#            106.37545104,
#            107.24137192,
#            108.11769388,
#            109.00458242,
#            109.90220633,
#            110.81073778,
#            111.73035235,
#            112.66122919,
#            113.60355102,
#            114.55750428,
#            115.52327918,
#            116.50106983,
#            117.4910743,
#            118.49349475,
#            119.50853749,
#            120.53641312,
#            121.57733662,
#            122.63152746,
#            123.69920971,
#            124.78061219,
#            125.87596852,
#            126.9855173,
#            128.10950222,
#            129.40969772,
#            130.83105289,
#            132.26801934,
#            133.72076853,
#            135.1894738,
#            136.67431042,
#            138.17545555,
#            139.69308832,
#            141.22738982,
#            142.77854313,
#            144.34673334,
#            145.93214757,
#            147.53497499,
#            149.15540687,
#            150.79363656,
#            152.44985954,
#            154.12427343,
#            155.81707805,
#            157.52847536,
#            159.2586696,
#        ]
#    )
#
#    expected_v_max_mzfw = np.array(
#        [
#            275.05809491,
#            275.74975061,
#            276.45336222,
#            277.16894119,
#            277.89649976,
#            278.63605127,
#            279.38761052,
#            280.15119411,
#            280.92658082,
#            281.71043103,
#            282.50629353,
#            283.3141931,
#            283.77522659,
#            283.31413715,
#            282.85229607,
#            282.38969966,
#            281.92634421,
#            281.46222596,
#            280.99734114,
#            280.53168593,
#            280.06525649,
#            279.59804895,
#            279.1300594,
#            278.6612839,
#            278.19171848,
#            277.72135913,
#            277.2502018,
#            276.77824243,
#            276.3054769,
#            275.83190107,
#            275.35751076,
#            274.88230176,
#            274.40626979,
#            273.92941059,
#            273.45171982,
#            272.97319311,
#            272.49382605,
#            272.01361422,
#            271.53255312,
#            271.05063824,
#            270.56786501,
#            270.08422882,
#            269.59972504,
#            269.11434898,
#            268.6280959,
#            268.14096105,
#            267.6529396,
#            267.1640267,
#            266.67421744,
#            266.18350687,
#            265.69189,
#            265.1993618,
#            264.70591716,
#            264.21155097,
#            263.71625803,
#            263.22003311,
#            262.72287094,
#            262.22476618,
#            261.72571346,
#            261.22570733,
#            260.72474231,
#            260.22281287,
#            259.71991341,
#            259.21603829,
#            258.7111818,
#            258.20533819,
#            257.69850166,
#            257.19066632,
#            256.68182624,
#            256.17197545,
#            255.6611079,
#            255.14921747,
#            254.636298,
#            254.12234326,
#            253.60734695,
#            253.09130272,
#            252.57420414,
#            252.05604472,
#            251.53681791,
#            251.01651708,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#            250.81000996,
#        ]
#    )
#
#    problem = run_system(
#        SpeedAltitudeDiagram(propulsion_id="fastoad.wrapper.propulsion.rubber_engine"), input_vars
#    )
#    # assert problem["data:performance:speed_altitude_diagram:v_min_mtow"] == pytest.approx(expected_v_min, abs=1e-5)
#    # assert problem["data:performance:speed_altitude_diagram:v_max_mtow"] == pytest.approx(expected_v_max, abs=1e-5)
#    # assert problem["data:performance:speed_altitude_diagram:v_min_mzfw"] == pytest.approx(expected_v_min, abs=1e-5)
#    # assert problem["data:performance:speed_altitude_diagram:v_max_mzfw"] == pytest.approx(expected_v_max, abs=1e-5)


# def test_ceiling_computation(input_xml):
# # Doit contenir toutes les entrees dont le mod√®le a besoin
# input_list = [
#     "data:geometry:wing:area",
#     "data:weight:aircraft:MTOW",
#     "data:weight:aircraft:MZFW",
#     "data:propulsion:rubber_engine:bypass_ratio",
#     "data:propulsion:rubber_engine:overall_pressure_ratio",
#     "data:propulsion:rubber_engine:turbine_inlet_temperature",
#     "data:propulsion:rubber_engine:maximum_mach",
#     "data:propulsion:rubber_engine:design_altitude",
#     "data:propulsion:MTO_thrust",
#     "data:aerodynamics:aircraft:cruise:CD",
#     "data:aerodynamics:aircraft:landing:CL_max_clean",
#     "data:aerodynamics:aircraft:cruise:CL",
#     "data:TLAR:cruise_mach",
# ]
#
# input_vars = input_xml.read(only=input_list).to_ivc()
#
# expected_ceiling_mtow = 41000
# expected_ceiling_mzfw = 45000
#
# problem = run_system(
#     CeilingComputation(propulsion_id="fastoad.wrapper.propulsion.rubber_engine"), input_vars
# )
# #assert problem["data:performance:ceiling:MTOW"] == pytest.approx(expected_ceiling_mtow, abs=1e-5)
# #assert problem["data:performance:ceiling:MZFW"] == pytest.approx(expected_ceiling_mzfw, abs=1e-5)


# def test_ceiling_mass_diagram(input_xml):
#    # Doit contenir toutes les entrees dont le mod√®le a besoin
#    input_list = [
#        "data:geometry:wing:area",
#        "data:weight:aircraft:MTOW",
#        "data:weight:aircraft:MZFW",
#        "data:propulsion:rubber_engine:bypass_ratio",
#        "data:propulsion:rubber_engine:overall_pressure_ratio",
#        "data:propulsion:rubber_engine:turbine_inlet_temperature",
#        "data:propulsion:rubber_engine:maximum_mach",
#        "data:propulsion:rubber_engine:design_altitude",
#        "data:propulsion:MTO_thrust",
#        "data:aerodynamics:aircraft:cruise:CD",
#        "data:aerodynamics:aircraft:landing:CL_max_clean",
#        "data:aerodynamics:aircraft:cruise:CL",
#        "data:TLAR:cruise_mach",
#    ]
#
#    input_vars = input_xml.read(only=input_list).to_ivc()
#
#    expected_ceiling_cruise = np.zeros(45)
#    expected_ceiling_climb = np.zeros(45)
#    expected_ceiling_buffeting = np.zeros(45)
#
#    problem = run_system(
#        CeilingComputation(propulsion_id="fastoad.wrapper.propulsion.rubber_engine"), input_vars
#    )
#
#    # assert problem["data:performance:ceiling:MTOW"] == pytest.approx(expected_ceiling_mtow, abs=1e-5)
#    # assert problem["data:performance:ceiling:MZFW"] == pytest.approx(expected_ceiling_mzfw, abs=1e-5)


# def test_available_power_diagram(input_xml):
#    # Doit contenir toutes les entrees dont le mod√®le a besoin
#    input_list = [
#        "data:geometry:wing:area",
#        "data:weight:aircraft:MTOW",
#        "data:weight:aircraft:MZFW",
#        "data:propulsion:rubber_engine:bypass_ratio",
#        "data:propulsion:rubber_engine:overall_pressure_ratio",
#        "data:propulsion:rubber_engine:turbine_inlet_temperature",
#        "data:propulsion:rubber_engine:maximum_mach",
#        "data:propulsion:rubber_engine:design_altitude",
#        "data:propulsion:MTO_thrust",
#        "data:aerodynamics:aircraft:cruise:CD",
#        "data:aerodynamics:aircraft:landing:CL_max_clean",
#        "data:aerodynamics:aircraft:cruise:CL",
#        "data:TLAR:cruise_mach",
#    ]
#
#    input_vars = input_xml.read(only=input_list).to_ivc()
#
#    expected_v_vector = np.zeros(100)
#    expected_thrust_max = np.zeros(100)
#    expected_thrust_available = np.zeros(100)
#
#    problem = run_system(
#        CeilingComputation(propulsion_id="fastoad.wrapper.propulsion.rubber_engine"), input_vars
#    )
#
#    # assert problem["data:performance:ceiling:MTOW"] == pytest.approx(expected_ceiling_mtow, abs=1e-5)
#    # assert problem["data:performance:ceiling:MZFW"] == pytest.approx(expected_ceiling_mzfw, abs=1e-5)


def test_thrust_diagram(input_xml):
    # Doit contenir toutes les entrees dont le mod√®le a besoin
    input_list = [
        "data:geometry:wing:area",
        "data:weight:aircraft:MTOW",
        "data:weight:aircraft:MZFW",
        "data:propulsion:rubber_engine:bypass_ratio",
        "data:propulsion:rubber_engine:overall_pressure_ratio",
        "data:propulsion:rubber_engine:turbine_inlet_temperature",
        "data:propulsion:rubber_engine:maximum_mach",
        "data:propulsion:rubber_engine:design_altitude",
        "data:propulsion:MTO_thrust",
        "data:aerodynamics:aircraft:cruise:CD",
        "data:aerodynamics:aircraft:landing:CL_max_clean",
        "data:aerodynamics:aircraft:cruise:CL",
        "data:TLAR:cruise_mach",
    ]

    input_vars = input_xml.read(only=input_list).to_ivc()

    ratio_iso_rating_thrust = np.array(
        [
            [
                0.900388682,
                0.8890016851029802,
                0.8777569898011852,
                0.8666545960946148,
                0.8556945039832696,
                0.8448767134671492,
                0.8342012245462538,
                0.8236680372205829,
                0.8132771514901369,
                0.8030285673549161,
                0.7929222848149199,
                0.7829583038701485,
                0.7731366245206021,
                0.7634572467662807,
                0.7539201706071836,
                0.7445253960433118,
                0.7352729230746647,
                0.7261627517012427,
                0.7171948819230454,
                0.7083693137400728,
                0.6996860471523252,
                0.6911450821598026,
                0.6827464187625047,
                0.6744900569604317,
                0.6663759967535835,
                0.65840423814196,
                0.6505747811255616,
                0.6428876257043881,
                0.6353427718784392,
                0.6279402196477154,
                0.6206799690122163,
                0.6135620199719422,
                0.6065863725268928,
                0.5997530266770682,
                0.5930619824224687,
                0.586513239763094,
                0.5801067986989439,
                0.573842659230019,
                0.5677208213563187,
                0.5617412850778434,
                0.5559040503945931,
                0.5502091173065674,
                0.5446564858137666,
                0.5392461559161906,
                0.5339781276138397,
                0.5288524009067135,
                0.5238689757948122,
                0.5190278522781355,
                0.514329030356684,
                0.5097725100304572,
            ],
            [
                0.6984879219195348,
                0.6901214574802547,
                0.6818872018854896,
                0.6737851551352402,
                0.6658153172295062,
                0.6579776881682877,
                0.6502722679515845,
                0.6426990565793969,
                0.6352580540517245,
                0.6279492603685678,
                0.6207726755299264,
                0.6137282995358003,
                0.6068161323861899,
                0.6000361740810948,
                0.5933884246205152,
                0.5868728840044509,
                0.5804895522329023,
                0.5742384293058688,
                0.568119515223351,
                0.5621328099853486,
                0.5562783135918616,
                0.5505560260428899,
                0.5449659473384338,
                0.539508077478493,
                0.5341824164630679,
                0.528988964292158,
                0.5239277209657636,
                0.5189986864838847,
                0.5142018608465212,
                0.5095372440536731,
                0.5050048361053404,
                0.5006046370015232,
                0.4963366467422214,
                0.4922008653274351,
                0.4881972927571643,
                0.48432592903140875,
                0.48058677415016876,
                0.47697982811344414,
                0.4735050909212351,
                0.47016256257354133,
                0.46695224307036304,
                0.4638741324117003,
                0.46092823059755283,
                0.4581145376279208,
                0.4554330535028043,
                0.4528837782222032,
                0.45046671178611764,
                0.44818185419454737,
                0.44602920544749264,
                0.4440087655449532,
            ],
            [
                0.5186526801250696,
                0.5128180325231304,
                0.5071013326371806,
                0.5015025804672198,
                0.49602177601324826,
                0.49065891927526595,
                0.4854140102532729,
                0.4802870489472691,
                0.4752780353572543,
                0.4703869694832288,
                0.4656138513251925,
                0.4609586808831454,
                0.4564214581570875,
                0.45200218314701884,
                0.4477008558529394,
                0.443517476274849,
                0.43945204441274793,
                0.4355045602666361,
                0.4316750238365134,
                0.4279634351223799,
                0.4243697941242357,
                0.42089410084208045,
                0.41753635527591454,
                0.41429655742573795,
                0.4111747072915505,
                0.4081708048733522,
                0.4052848501711432,
                0.40251684318492326,
                0.3998667839146926,
                0.39733467236045106,
                0.3949205085221989,
                0.3926242923999358,
                0.3904460239936619,
                0.3883857033033773,
                0.38644333032908185,
                0.38461890507077556,
                0.3829124275284585,
                0.38132389770213065,
                0.37985331559179203,
                0.3785006811974425,
                0.37726599451908227,
                0.3761492555567113,
                0.3751504643103294,
                0.37426962077993675,
                0.3735067249655334,
                0.37286177686711913,
                0.37233477648469404,
                0.3719257238182582,
                0.3716346188678116,
                0.3714614616333542,
            ],
            [
                0.3647096608694324,
                0.36085803888354784,
                0.35710625710340693,
                0.3534543155290096,
                0.3499022141603557,
                0.3464499529974455,
                0.3430975320402788,
                0.3398449512888555,
                0.336692210743176,
                0.33363931040323985,
                0.3306862502690474,
                0.3278330303405984,
                0.32507965061789307,
                0.32242611110093117,
                0.3198724117897129,
                0.31741855268423813,
                0.31506453378450694,
                0.3128103550905193,
                0.31065601660227526,
                0.3086015183197747,
                0.3066468602430178,
                0.30479204237200436,
                0.30303706470673447,
                0.30138192724720814,
                0.29982662999342535,
                0.2983711729453862,
                0.2970155561030905,
                0.29575977946653836,
                0.2946038430357299,
                0.2935477468106649,
                0.29259149079134344,
                0.2917350749777656,
                0.29097849936993125,
                0.29032176396784043,
                0.28976486877149327,
                0.28930781378088954,
                0.28895059899602943,
                0.28869322441691286,
                0.28853569004353985,
                0.28847799587591044,
                0.2885201419140245,
                0.2886621281578822,
                0.2889039546074834,
                0.28924562126282816,
                0.28968712812391645,
                0.2902284751907483,
                0.2908696624633237,
                0.29161068994164263,
                0.2924515576257052,
                0.2933922655155113,
            ],
            [
                0.23839266816613508,
                0.23594857333052072,
                0.23357770139674391,
                0.23128005236480467,
                0.22905562623470296,
                0.2269044230064388,
                0.22482644268001217,
                0.22282168525542312,
                0.22089015073267157,
                0.21903183911175758,
                0.21724675039268113,
                0.21553488457544218,
                0.21389624166004084,
                0.21233082164647699,
                0.21083862453475072,
                0.20941965032486198,
                0.2080738990168108,
                0.20680137061059714,
                0.20560206510622103,
                0.20447598250368246,
                0.20342312280298147,
                0.202443486004118,
                0.20153707210709207,
                0.20070388111190368,
                0.19994391301855285,
                0.19925716782703956,
                0.19864364553736374,
                0.19810334614952554,
                0.19763626966352488,
                0.19724241607936177,
                0.1969217853970362,
                0.1966743776165481,
                0.19650019273789765,
                0.19639923076108473,
                0.19637149168610926,
                0.19641697551297138,
                0.19653568224167106,
                0.1967276118722083,
                0.19699276440458302,
                0.19733113983879536,
                0.19774273817484522,
                0.19822755941273265,
                0.19878560355245756,
                0.19941687059402002,
                0.20012136053742005,
                0.2008990733826576,
                0.2017500091297327,
                0.20267416777864536,
                0.20367154932939555,
                0.2047421537819833,
            ],
        ]
    )
    ratio_iso_altitude_thrust = np.array(
        [
            [
                0.900388682,
                0.8890016851029802,
                0.8777569898011852,
                0.8666545960946148,
                0.8556945039832696,
                0.8448767134671492,
                0.8342012245462538,
                0.8236680372205829,
                0.8132771514901369,
                0.8030285673549161,
                0.7929222848149199,
                0.7829583038701485,
                0.7731366245206021,
                0.7634572467662807,
                0.7539201706071836,
                0.7445253960433118,
                0.7352729230746647,
                0.7261627517012427,
                0.7171948819230454,
                0.7083693137400728,
                0.6996860471523252,
                0.6911450821598026,
                0.6827464187625047,
                0.6744900569604317,
                0.6663759967535835,
                0.65840423814196,
                0.6505747811255616,
                0.6428876257043881,
                0.6353427718784392,
                0.6279402196477154,
                0.6206799690122163,
                0.6135620199719422,
                0.6065863725268928,
                0.5997530266770682,
                0.5930619824224687,
                0.586513239763094,
                0.5801067986989439,
                0.573842659230019,
                0.5677208213563187,
                0.5617412850778434,
                0.5559040503945931,
                0.5502091173065674,
                0.5446564858137666,
                0.5392461559161906,
                0.5339781276138397,
                0.5288524009067135,
                0.5238689757948122,
                0.5190278522781355,
                0.514329030356684,
                0.5097725100304572,
            ],
            [
                0.88238090836,
                0.8712216514009206,
                0.8602018500051615,
                0.8493215041727225,
                0.8385806139036043,
                0.8279791791978062,
                0.8175172000553287,
                0.8071946764761712,
                0.7970116084603341,
                0.7869679960078177,
                0.7770638391186215,
                0.7672991377927455,
                0.75767389203019,
                0.7481881018309551,
                0.73884176719504,
                0.7296348881224456,
                0.7205674646131714,
                0.7116394966672177,
                0.7028509842845844,
                0.6942019274652713,
                0.6856923262092788,
                0.6773221805166065,
                0.6690914903872547,
                0.6610002558212231,
                0.6530484768185119,
                0.6452361533791209,
                0.6375632855030503,
                0.6300298731903002,
                0.6226359164408705,
                0.6153814152547611,
                0.608266369631972,
                0.6012907795725033,
                0.5944546450763549,
                0.5877579661435268,
                0.5812007427740193,
                0.5747829749678321,
                0.5685046627249651,
                0.5623658060454186,
                0.5563664049291924,
                0.5505064593762865,
                0.5447859693867012,
                0.539204934960436,
                0.5337633560974913,
                0.5284612327978668,
                0.5232985650615628,
                0.5182753528885792,
                0.513391596278916,
                0.5086472952325728,
                0.5040424497495504,
                0.499577059829848,
            ],
            [
                0.8373614742600001,
                0.8267715671457716,
                0.8163140005151023,
                0.8059887743679918,
                0.7957958887044408,
                0.7857353435244488,
                0.7758071388280161,
                0.7660112746151422,
                0.7563477508858273,
                0.746816567640072,
                0.7374177248778755,
                0.7281512225992381,
                0.7190170608041598,
                0.7100152394926411,
                0.7011457586646809,
                0.6924086183202801,
                0.6838038184594383,
                0.6753313590821557,
                0.6669912401884323,
                0.6587834617782679,
                0.6507080238516626,
                0.6427649264086165,
                0.6349541694491295,
                0.6272757529732015,
                0.6197296769808326,
                0.6123159414720228,
                0.6050345464467722,
                0.5978854919050809,
                0.5908687778469486,
                0.5839844042723754,
                0.5772323711813612,
                0.5706126785739063,
                0.5641253264500103,
                0.5577703148096735,
                0.5515476436528959,
                0.5454573129796775,
                0.5394993227900179,
                0.5336736730839177,
                0.5279803638613765,
                0.5224193951223943,
                0.5169907668669717,
                0.5116944790951077,
                0.506530531806803,
                0.5014989250020573,
                0.4965996586808709,
                0.4918327328432435,
                0.48719814748917534,
                0.4826959026186661,
                0.4783259982317161,
                0.4740884343283252,
            ],
            [
                0.31513603869999995,
                0.31115058978604304,
                0.30721494643041475,
                0.30332910863311513,
                0.29949307639414435,
                0.29570684971350225,
                0.2919704285911888,
                0.288283813027204,
                0.28464700302154794,
                0.28105999857422065,
                0.2775227996852219,
                0.274035406354552,
                0.2705978185822107,
                0.26721003636819823,
                0.26387205971251426,
                0.26058388861515913,
                0.2573455230761327,
                0.2541569630954349,
                0.25101820867306585,
                0.24792925980902544,
                0.24489011650331383,
                0.24190077875593088,
                0.23896124656687665,
                0.23607151993615108,
                0.2332315988637542,
                0.230441483349686,
                0.22770117339394652,
                0.2250106689965358,
                0.22236997015745374,
                0.2197790768767004,
                0.21723798915427567,
                0.21474670699017975,
                0.21230523038441249,
                0.2099135593369739,
                0.20757169384786403,
                0.2052796339170829,
                0.20303737954463036,
                0.20084493073050663,
                0.19870228747471158,
                0.19660944977724518,
                0.19456641763810759,
                0.19257319105729856,
                0.1906297700348183,
                0.1887361545706667,
                0.18689234466484386,
                0.18509834031734967,
                0.18335414152818424,
                0.18165974829734743,
                0.18001516062483938,
                0.17842037851066,
            ],
        ]
    )
    sfc_iso_rating_consumption = np.array(
        [
            [
                9.7028e-06,
                9.906532857142856e-06,
                1.0110265714285715e-05,
                1.0313998571428571e-05,
                1.0517731428571428e-05,
                1.0721464285714285e-05,
                1.0925197142857143e-05,
                1.112893e-05,
                1.1332662857142857e-05,
                1.1536395714285715e-05,
                1.1740128571428572e-05,
                1.1943861428571428e-05,
                1.2147594285714287e-05,
                1.2351327142857143e-05,
                1.255506e-05,
                1.2758792857142858e-05,
                1.2962525714285713e-05,
                1.3166258571428572e-05,
                1.3369991428571428e-05,
                1.3573724285714285e-05,
                1.3777457142857144e-05,
                1.398119e-05,
                1.4184922857142857e-05,
                1.4388655714285715e-05,
                1.4592388571428572e-05,
                1.4796121428571429e-05,
                1.4999854285714287e-05,
                1.5203587142857142e-05,
                1.5407320000000002e-05,
                1.561105285714286e-05,
                1.581478571428572e-05,
                1.6018518571428574e-05,
                1.622225142857143e-05,
                1.6425984285714287e-05,
                1.6629717142857146e-05,
                1.683345e-05,
                1.703718285714286e-05,
                1.7240915714285717e-05,
                1.7444648571428572e-05,
                1.764838142857143e-05,
                1.785211428571429e-05,
                1.8055847142857144e-05,
                1.8259580000000002e-05,
                1.846331285714286e-05,
                1.8667045714285716e-05,
                1.8870778571428574e-05,
                1.9074511428571433e-05,
                1.9278244285714288e-05,
                1.9481977142857146e-05,
                1.9685710000000004e-05,
            ],
            [
                1.0113066633111485e-05,
                1.0299052742897607e-05,
                1.048503885268373e-05,
                1.0671024962469852e-05,
                1.0857011072255974e-05,
                1.1042997182042098e-05,
                1.122898329182822e-05,
                1.1414969401614343e-05,
                1.1600955511400465e-05,
                1.1786941621186587e-05,
                1.1972927730972709e-05,
                1.2158913840758832e-05,
                1.2344899950544956e-05,
                1.2530886060331078e-05,
                1.27168721701172e-05,
                1.2902858279903321e-05,
                1.3088844389689445e-05,
                1.3274830499475567e-05,
                1.346081660926169e-05,
                1.3646802719047812e-05,
                1.3832788828833934e-05,
                1.4018774938620056e-05,
                1.420476104840618e-05,
                1.4390747158192301e-05,
                1.4576733267978425e-05,
                1.4762719377764547e-05,
                1.4948705487550669e-05,
                1.513469159733679e-05,
                1.5320677707122912e-05,
                1.5506663816909038e-05,
                1.569264992669516e-05,
                1.587863603648128e-05,
                1.6064622146267403e-05,
                1.6250608256053525e-05,
                1.643659436583965e-05,
                1.6622580475625772e-05,
                1.6808566585411894e-05,
                1.6994552695198016e-05,
                1.7180538804984138e-05,
                1.7366524914770263e-05,
                1.755251102455638e-05,
                1.7738497134342507e-05,
                1.792448324412863e-05,
                1.811046935391475e-05,
                1.8296455463700876e-05,
                1.8482441573486994e-05,
                1.866842768327312e-05,
                1.885441379305924e-05,
                1.9040399902845363e-05,
                1.9226386012631485e-05,
            ],
            [
                1.045420162389059e-05,
                1.0622440986319978e-05,
                1.0790680348749367e-05,
                1.0958919711178752e-05,
                1.1127159073608141e-05,
                1.129539843603753e-05,
                1.1463637798466918e-05,
                1.1631877160896304e-05,
                1.1800116523325692e-05,
                1.1968355885755081e-05,
                1.2136595248184467e-05,
                1.2304834610613855e-05,
                1.2473073973043244e-05,
                1.2641313335472633e-05,
                1.2809552697902018e-05,
                1.2977792060331407e-05,
                1.3146031422760796e-05,
                1.3314270785190181e-05,
                1.348251014761957e-05,
                1.3650749510048958e-05,
                1.3818988872478347e-05,
                1.3987228234907732e-05,
                1.4155467597337121e-05,
                1.432370695976651e-05,
                1.4491946322195899e-05,
                1.4660185684625284e-05,
                1.4828425047054673e-05,
                1.4996664409484061e-05,
                1.5164903771913447e-05,
                1.5333143134342836e-05,
                1.5501382496772224e-05,
                1.566962185920161e-05,
                1.5837861221631e-05,
                1.6006100584060387e-05,
                1.6174339946489776e-05,
                1.634257930891916e-05,
                1.651081867134855e-05,
                1.667905803377794e-05,
                1.6847297396207324e-05,
                1.7015536758636713e-05,
                1.71837761210661e-05,
                1.735201548349549e-05,
                1.752025484592488e-05,
                1.7688494208354264e-05,
                1.7856733570783653e-05,
                1.802497293321304e-05,
                1.8193212295642427e-05,
                1.8361451658071816e-05,
                1.8529691020501204e-05,
                1.8697930382930593e-05,
            ],
            [
                1.0721178635075188e-05,
                1.0871671250147842e-05,
                1.1022163865220494e-05,
                1.1172656480293148e-05,
                1.13231490953658e-05,
                1.1473641710438454e-05,
                1.1624134325511107e-05,
                1.177462694058376e-05,
                1.1925119555656413e-05,
                1.2075612170729067e-05,
                1.2226104785801719e-05,
                1.2376597400874373e-05,
                1.2527090015947025e-05,
                1.2677582631019679e-05,
                1.2828075246092331e-05,
                1.2978567861164985e-05,
                1.3129060476237639e-05,
                1.3279553091310291e-05,
                1.3430045706382943e-05,
                1.3580538321455597e-05,
                1.3731030936528251e-05,
                1.3881523551600903e-05,
                1.4032016166673556e-05,
                1.418250878174621e-05,
                1.4333001396818863e-05,
                1.4483494011891516e-05,
                1.4633986626964168e-05,
                1.4784479242036822e-05,
                1.4934971857109476e-05,
                1.5085464472182128e-05,
                1.523595708725478e-05,
                1.5386449702327437e-05,
                1.553694231740009e-05,
                1.5687434932472742e-05,
                1.5837927547545394e-05,
                1.598842016261805e-05,
                1.6138912777690702e-05,
                1.6289405392763354e-05,
                1.6439898007836006e-05,
                1.6590390622908662e-05,
                1.6740883237981314e-05,
                1.6891375853053966e-05,
                1.7041868468126622e-05,
                1.7192361083199274e-05,
                1.7342853698271926e-05,
                1.749334631334458e-05,
                1.764383892841723e-05,
                1.7794331543489886e-05,
                1.794482415856254e-05,
                1.809531677363519e-05,
            ],
            [
                1.0850880211909204e-05,
                1.0990566408643898e-05,
                1.113025260537859e-05,
                1.1269938802113285e-05,
                1.140962499884798e-05,
                1.1549311195582674e-05,
                1.1688997392317366e-05,
                1.182868358905206e-05,
                1.1968369785786755e-05,
                1.210805598252145e-05,
                1.2247742179256142e-05,
                1.2387428375990837e-05,
                1.2527114572725531e-05,
                1.2666800769460224e-05,
                1.2806486966194918e-05,
                1.2946173162929612e-05,
                1.3085859359664307e-05,
                1.3225545556399e-05,
                1.3365231753133694e-05,
                1.3504917949868388e-05,
                1.3644604146603083e-05,
                1.3784290343337777e-05,
                1.392397654007247e-05,
                1.4063662736807164e-05,
                1.4203348933541857e-05,
                1.4343035130276551e-05,
                1.4482721327011245e-05,
                1.462240752374594e-05,
                1.4762093720480634e-05,
                1.4901779917215329e-05,
                1.5041466113950021e-05,
                1.5181152310684714e-05,
                1.532083850741941e-05,
                1.5460524704154103e-05,
                1.5600210900888797e-05,
                1.5739897097623488e-05,
                1.5879583294358186e-05,
                1.6019269491092877e-05,
                1.615895568782757e-05,
                1.6298641884562266e-05,
                1.643832808129696e-05,
                1.6578014278031654e-05,
                1.671770047476635e-05,
                1.6857386671501043e-05,
                1.6997072868235737e-05,
                1.713675906497043e-05,
                1.7276445261705123e-05,
                1.7416131458439817e-05,
                1.755581765517451e-05,
                1.7695503851909206e-05,
            ],
        ]
    )
    sfc_iso_altitude_consumption = np.array(
        [
            [
                9.7028e-06,
                9.906532857142856e-06,
                1.0110265714285715e-05,
                1.0313998571428571e-05,
                1.0517731428571428e-05,
                1.0721464285714285e-05,
                1.0925197142857143e-05,
                1.112893e-05,
                1.1332662857142857e-05,
                1.1536395714285715e-05,
                1.1740128571428572e-05,
                1.1943861428571428e-05,
                1.2147594285714287e-05,
                1.2351327142857143e-05,
                1.255506e-05,
                1.2758792857142858e-05,
                1.2962525714285713e-05,
                1.3166258571428572e-05,
                1.3369991428571428e-05,
                1.3573724285714285e-05,
                1.3777457142857144e-05,
                1.398119e-05,
                1.4184922857142857e-05,
                1.4388655714285715e-05,
                1.4592388571428572e-05,
                1.4796121428571429e-05,
                1.4999854285714287e-05,
                1.5203587142857142e-05,
                1.5407320000000002e-05,
                1.561105285714286e-05,
                1.581478571428572e-05,
                1.6018518571428574e-05,
                1.622225142857143e-05,
                1.6425984285714287e-05,
                1.6629717142857146e-05,
                1.683345e-05,
                1.703718285714286e-05,
                1.7240915714285717e-05,
                1.7444648571428572e-05,
                1.764838142857143e-05,
                1.785211428571429e-05,
                1.8055847142857144e-05,
                1.8259580000000002e-05,
                1.846331285714286e-05,
                1.8667045714285716e-05,
                1.8870778571428574e-05,
                1.9074511428571433e-05,
                1.9278244285714288e-05,
                1.9481977142857146e-05,
                1.9685710000000004e-05,
            ],
            [
                9.70376338275379e-06,
                9.907516468358632e-06,
                1.0111269553963475e-05,
                1.0315022639568318e-05,
                1.051877572517316e-05,
                1.0722528810778002e-05,
                1.0926281896382846e-05,
                1.1130034981987688e-05,
                1.133378806759253e-05,
                1.1537541153197374e-05,
                1.1741294238802216e-05,
                1.1945047324407058e-05,
                1.2148800410011902e-05,
                1.2352553495616742e-05,
                1.2556306581221584e-05,
                1.2760059666826428e-05,
                1.2963812752431268e-05,
                1.3167565838036112e-05,
                1.3371318923640954e-05,
                1.3575072009245797e-05,
                1.377882509485064e-05,
                1.3982578180455482e-05,
                1.4186331266060325e-05,
                1.4390084351665168e-05,
                1.459383743727001e-05,
                1.4797590522874853e-05,
                1.5001343608479696e-05,
                1.5205096694084537e-05,
                1.5408849779689384e-05,
                1.5612602865294228e-05,
                1.5816355950899068e-05,
                1.602010903650391e-05,
                1.622386212210875e-05,
                1.6427615207713593e-05,
                1.6631368293318437e-05,
                1.6835121378923277e-05,
                1.703887446452812e-05,
                1.7242627550132965e-05,
                1.7446380635737805e-05,
                1.765013372134265e-05,
                1.7853886806947493e-05,
                1.8057639892552333e-05,
                1.8261392978157177e-05,
                1.846514606376202e-05,
                1.866889914936686e-05,
                1.8872652234971705e-05,
                1.907640532057655e-05,
                1.928015840618139e-05,
                1.9483911491786233e-05,
                1.9687664577391077e-05,
            ],
            [
                9.706273941548997e-06,
                9.910079742175933e-06,
                1.011388554280287e-05,
                1.0317691343429806e-05,
                1.0521497144056743e-05,
                1.0725302944683679e-05,
                1.0929108745310616e-05,
                1.1132914545937552e-05,
                1.1336720346564488e-05,
                1.1540526147191426e-05,
                1.1744331947818362e-05,
                1.1948137748445298e-05,
                1.2151943549072236e-05,
                1.2355749349699172e-05,
                1.2559555150326108e-05,
                1.2763360950953046e-05,
                1.296716675157998e-05,
                1.3170972552206918e-05,
                1.3374778352833854e-05,
                1.357858415346079e-05,
                1.3782389954087727e-05,
                1.3986195754714663e-05,
                1.41900015553416e-05,
                1.4393807355968537e-05,
                1.4597613156595473e-05,
                1.480141895722241e-05,
                1.5005224757849347e-05,
                1.5209030558476281e-05,
                1.541283635910322e-05,
                1.5616642159730157e-05,
                1.5820447960357096e-05,
                1.602425376098403e-05,
                1.6228059561610965e-05,
                1.64318653622379e-05,
                1.663567116286484e-05,
                1.6839476963491773e-05,
                1.7043282764118712e-05,
                1.7247088564745648e-05,
                1.7450894365372584e-05,
                1.765470016599952e-05,
                1.785850596662646e-05,
                1.8062311767253392e-05,
                1.8266117567880332e-05,
                1.8469923368507268e-05,
                1.8673729169134204e-05,
                1.887753496976114e-05,
                1.9081340770388076e-05,
                1.9285146571015012e-05,
                1.9488952371641948e-05,
                1.9692758172268887e-05,
            ],
            [
                9.746055863054347e-06,
                9.950696977666e-06,
                1.0155338092277656e-05,
                1.0359979206889308e-05,
                1.0564620321500962e-05,
                1.0769261436112616e-05,
                1.0973902550724272e-05,
                1.1178543665335926e-05,
                1.1383184779947578e-05,
                1.1587825894559234e-05,
                1.1792467009170887e-05,
                1.1997108123782541e-05,
                1.2201749238394197e-05,
                1.240639035300585e-05,
                1.2611031467617503e-05,
                1.2815672582229159e-05,
                1.3020313696840811e-05,
                1.3224954811452466e-05,
                1.3429595926064119e-05,
                1.3634237040675773e-05,
                1.3838878155287428e-05,
                1.4043519269899082e-05,
                1.4248160384510736e-05,
                1.445280149912239e-05,
                1.4657442613734044e-05,
                1.4862083728345698e-05,
                1.5066724842957353e-05,
                1.5271365957569004e-05,
                1.5476007072180663e-05,
                1.568064818679232e-05,
                1.588528930140397e-05,
                1.6089930416015623e-05,
                1.6294571530627275e-05,
                1.649921264523893e-05,
                1.6703853759850586e-05,
                1.690849487446224e-05,
                1.7113135989073894e-05,
                1.731777710368555e-05,
                1.7522418218297202e-05,
                1.7727059332908857e-05,
                1.793170044752051e-05,
                1.8136341562132162e-05,
                1.8340982676743817e-05,
                1.8545623791355473e-05,
                1.8750264905967125e-05,
                1.895490602057878e-05,
                1.9159547135190436e-05,
                1.936418824980209e-05,
                1.9568829364413744e-05,
                1.97734704790254e-05,
            ],
        ]
    )

    problem = run_system(
        ThrustDiagram(propulsion_id="fastoad.wrapper.propulsion.rubber_engine"), input_vars
    )

    assert problem["data:performance:thrust_diagram:iso_rating_thrust:ratio_F_F0"] == pytest.approx(
        ratio_iso_rating_thrust, abs=1e-5
    )
    assert problem[
        "data:performance:thrust_diagram:iso_altitude_thrust:ratio_F_F0"
    ] == pytest.approx(ratio_iso_altitude_thrust, abs=1e-5)
    assert problem["data:performance:thrust_diagram:iso_rating_consumption:SFC"] == pytest.approx(
        sfc_iso_rating_consumption, abs=1e-5
    )
    assert problem["data:performance:thrust_diagram:iso_altitude_consumption:SFC"] == pytest.approx(
        sfc_iso_altitude_consumption, abs=1e-5
    )
